<configuration>
    <!-- 定义日志文件路径和文件名 -->
    <property name="LOG_PATH" value="logs" />
    <property name="LOG_FILE" value="${LOG_PATH}/qc-master.log" />

    <!-- 控制台输出的 appender -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} - %level - %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 文件输出的 appender，结合时间和大小滚动策略 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FILE}</file>
        
        <!-- 滚动策略：按时间和大小滚动 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 按天滚动，并使用 gzip 压缩旧日志文件 -->
            <fileNamePattern>${LOG_PATH}/qc-master.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            
            <!-- 每个日志文件的最大大小，例如 50MB -->
            <maxFileSize>50MB</maxFileSize>
            
            <!-- 保留 30 天的日志文件 -->
            <maxHistory>30</maxHistory>
            
            <!-- 日志文件总大小的上限，例如 1GB -->
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} - %level - %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 根日志记录器 -->
    <root level="info">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
    </root>

    <!-- 可以根据需要增加特定的日志记录器 -->
    <logger name="com.example" level="debug" additivity="false">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
    </logger>
</configuration>